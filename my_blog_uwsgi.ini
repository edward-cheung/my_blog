[uwsgi]
socket = :8000
# socket = /home/wwwroot/my_blog/my_blog.sock
chdir = /home/wwwroot/my_blog
# wsgi-file = my_blog/wsgi.py
module=my_blog.wsgi
master = true
processes = 10
threads = 3
# django<1.4,必须指定env和module
env = DJANGO_SETTINGS_MODULE=my_blog.settings

# ... with appropriate permissions - may be needed
chmod-socket = 664

# clear environment on exit
vacuum = true

safe-pidfile = /tmp/project-master.pid # create a pidfile
harakiri = 20 # respawn processes taking more than 20 seconds
limit-as = 512 # limit the project to 512 MB !!!
max-requests = 5000 # respawn processes after serving 5000 requests
daemonize = /home/wwwlog/uwsgi/my_blog.log # background the process & log

# lsof -i :80 # 查询80端口号占用进程
# lsof -i :80|grep -v "PID"|awk '{print "kill -9",$2}'|sh # 一次性清除占用80端口的进程
# kill 5014 # 终止进程
# kill -9 5014 # 强制终止进程
# export PATH=/usr/local/python/bin:$PATH # 添加path环境变量

# 注：CentOS 7启动服务的命令是systemctl restart nginx.service
# /etc/init.d/nginx restart
# 注：CentOS 7启动服务的命令是systemctl restart uwsgi.service
# service uwsgi restart
# uwsgi --plugin python --http-socket :8000 --wsgi-file index.py
# uwsgi --plugin python --socket :8000 --module my_blog.wsgi
# uwsgi --ini my_blog_uwsgi.ini

# python manage.py collectstatic
# /usr/local/lib/python3.6/site-packages/django/contrib/admin/static/
